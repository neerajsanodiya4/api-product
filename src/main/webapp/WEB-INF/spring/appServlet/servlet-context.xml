<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven>
		<message-converters>
			<beans:bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
			<beans:bean class="org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter" />
			<beans:bean class="org.springframework.http.converter.StringHttpMessageConverter" />
		</message-converters>
	</annotation-driven>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<!-- <resources mapping="/resources/**" location="/resources/" /> -->
	
	<resources mapping="swagger-ui.html" location="classpath:/META-INF/resources/" />
 	<resources mapping="/webjars/**" location="classpath:/META-INF/resources/webjars/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<!-- <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean> -->
	
	<context:component-scan base-package="com.product.*" />
	
	<beans:bean id="log4jInitialization"
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<beans:property name="targetClass" value="org.springframework.util.Log4jConfigurer" />
		<beans:property name="targetMethod" value="initLogging" />
		<beans:property name="arguments">
			<beans:list>
				<beans:value>classpath:log4j.xml</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>
	
</beans:beans>
